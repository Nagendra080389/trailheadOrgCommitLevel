//Generated by wsdl2apex

public class AsyncParkService {
    public class doDivideResponseFuture extends System.WebServiceCalloutFuture {
        public Double getValue() {
            ParkService.doDivideResponse response = (ParkService.doDivideResponse)System.WebServiceCallout.endInvoke(this);
            return response.return_x;
        }
    }
    public class doSubtractResponseFuture extends System.WebServiceCalloutFuture {
        public Double getValue() {
            ParkService.doSubtractResponse response = (ParkService.doSubtractResponse)System.WebServiceCallout.endInvoke(this);
            return response.return_x;
        }
    }
    public class doMultiplyResponseFuture extends System.WebServiceCalloutFuture {
        public Double getValue() {
            ParkService.doMultiplyResponse response = (ParkService.doMultiplyResponse)System.WebServiceCallout.endInvoke(this);
            return response.return_x;
        }
    }
    public class doAddResponseFuture extends System.WebServiceCalloutFuture {
        public Double getValue() {
            ParkService.doAddResponse response = (ParkService.doAddResponse)System.WebServiceCallout.endInvoke(this);
            return response.return_x;
        }
    }
    public class AsyncCalculatorImplPort {
        public String endpoint_x = 'https://th-apex-soap-service.herokuapp.com/service/calculator';
        public Map<String,String> inputHttpHeaders_x;
        public String clientCertName_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://calculator.services/', 'ParkService'};
        public AsyncParkService.doDivideResponseFuture beginDoDivide(System.Continuation continuation,Double arg0,Double arg1) {
            ParkService.doDivide request_x = new ParkService.doDivide();
            request_x.arg0 = arg0;
            request_x.arg1 = arg1;
            return (AsyncParkService.doDivideResponseFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncParkService.doDivideResponseFuture.class,
              continuation,
              new String[]{endpoint_x,
              '',
              'http://calculator.services/',
              'doDivide',
              'http://calculator.services/',
              'doDivideResponse',
              'ParkService.doDivideResponse'}
            );
        }
        public AsyncParkService.doSubtractResponseFuture beginDoSubtract(System.Continuation continuation,Double arg0,Double arg1) {
            ParkService.doSubtract request_x = new ParkService.doSubtract();
            request_x.arg0 = arg0;
            request_x.arg1 = arg1;
            return (AsyncParkService.doSubtractResponseFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncParkService.doSubtractResponseFuture.class,
              continuation,
              new String[]{endpoint_x,
              '',
              'http://calculator.services/',
              'doSubtract',
              'http://calculator.services/',
              'doSubtractResponse',
              'ParkService.doSubtractResponse'}
            );
        }
        public AsyncParkService.doMultiplyResponseFuture beginDoMultiply(System.Continuation continuation,Double arg0,Double arg1) {
            ParkService.doMultiply request_x = new ParkService.doMultiply();
            request_x.arg0 = arg0;
            request_x.arg1 = arg1;
            return (AsyncParkService.doMultiplyResponseFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncParkService.doMultiplyResponseFuture.class,
              continuation,
              new String[]{endpoint_x,
              '',
              'http://calculator.services/',
              'doMultiply',
              'http://calculator.services/',
              'doMultiplyResponse',
              'ParkService.doMultiplyResponse'}
            );
        }
        public AsyncParkService.doAddResponseFuture beginDoAdd(System.Continuation continuation,Double arg0,Double arg1) {
            ParkService.doAdd request_x = new ParkService.doAdd();
            request_x.arg0 = arg0;
            request_x.arg1 = arg1;
            return (AsyncParkService.doAddResponseFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncParkService.doAddResponseFuture.class,
              continuation,
              new String[]{endpoint_x,
              '',
              'http://calculator.services/',
              'doAdd',
              'http://calculator.services/',
              'doAddResponse',
              'ParkService.doAddResponse'}
            );
        }
    }
}