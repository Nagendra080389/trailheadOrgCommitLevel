<project name="ANT Jobs" basedir="." xmlns:sf="antlib:com.salesforce">
	<tstamp>
		<format property="BUILD_DATE"
		        pattern="yyyyMMdd" />
	</tstamp>
	<condition property="sf.deploy.username" value="">
		<not>
			<isset property="sf.deploy.username" />
		</not>
	</condition>
	<condition property="sf.deploy.password" value="">
		<not>
			<isset property="sf.deploy.password" />
		</not>
	</condition>
	<condition property="sf.deploy.sessionId" value="">
		<not>
			<isset property="sf.deploy.sessionId" />
		</not>
	</condition>
	<taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
		<classpath>
			<pathelement location="../../migration_tool/ant-salesforce.jar" />
		</classpath>
	</taskdef>
	<!-- ========================================== -->
	<!-- Deployment targets                         -->
	<!-- ========================================== -->
	<target name="sf_prepare_deployment">
		<echo message="START: Create diff dir" />
		<echo message="Checking against targer: ${target}" />
		<mkdir dir="../${diffDir}" />
		<mkdir dir="../${diffDir}/src" />
		<exec executable="C:\Program Files\Git\bin\bash.exe" osfamily="windows" failonerror="true">
			<arg value="${scriptName}.sh" />
			<arg value="${target}" />
			<arg value="${targetName}" />
		</exec>
		<exec executable="/bin/bash" osfamily="unix" failonerror="true">
			<arg value="${scriptName}.sh" />
			<arg value="${target}" />
			<arg value="${targetName}" />
		</exec>
		<exec executable="C:\Program Files\Git\bin\bash.exe" osfamily="windows">
			<arg value="create_changes.sh" />
			<arg value="${diffDir}" />
		</exec>

		<exec executable="/bin/bash" osfamily="unix">
			<arg value="create_changes.sh" />
			<arg value="${diffDir}" />
		</exec>
		<echo message="Generating package.xml" />

		<exec executable="C:\Program Files\Git\bin\bash.exe" osfamily="windows">
			<arg value="generate_package.sh" />
			<arg value="../final.txt" />
			<arg value="package" />
			<arg value="../${diffDir}/src" />
		</exec>

		<exec executable="/bin/bash" osfamily="unix">
			<arg value="generate_package_unix.sh" />
			<arg value="../final.txt" />
			<arg value="package" />
			<arg value="../${diffDir}/src" />
		</exec>
		<echo message="Package generated." />
		<echo message="Adding properties if applicable" />

		<exec executable="C:\Program Files\Git\bin\bash.exe" osfamily="windows">
			<arg value="properties_helper.sh" />
			<arg value="${propsEnv}" />
			<arg value="../${diffDir}/src" />
		</exec>

		<exec executable="/bin/bash" osfamily="unix">
			<arg value="properties_helper.sh" />
			<arg value="${propsEnv}" />
			<arg value="../${diffDir}/src" />
		</exec>
		<echo message="Properties added. Finished." />
	</target>

	<target name="sf_prepare_full_deployment">
		<echo message="START: Copying deployment files" />
		<copy todir="../${diffDir}/src">
			<fileset dir="../src" excludes="**/staticresources/**" />
		</copy>
	</target>

	<target name="sf_build" depends="sf_prepare_deployment">
		<echo message="START: SFDC Deployment" />
		<echo message="../${diffDir}/src" />
		<record name="deploylog.txt" action="start"/>
		<sf:deploy  username="${sf.deploy.username}" password="${sf.deploy.password}"
		            serverurl="${sf.deploy.serverurl}" sessionId="${sf.deploy.sessionId}"
		            deployRoot="../${diffDir}/src" maxPoll="${sf.maxPoll}"
		            pollWaitMillis="${sf.pollWaitMillis}" checkOnly="${sf.checkOnly}"
		            runAllTests="${sf.runAllTests}" logType="${sf.logType}" testLevel="RunAllTestsInOrg"/>
		<record name="deploylog.txt" action="stop"/>
		<echo message="DEBUG LOG: dev.asyncRequestId = \" />
		<loadfile srcFile="deploylog.txt" property="dev.asyncRequestId">
			<filterchain>
				<!-- We are only interested in the last line of the deploy log -->
				<!-- And only something that looks like a Salesforce ID. -->
				<tokenfilter>
					<!-- Split by white space and exclude the delimiter characters -->
					<stringtokenizer suppressdelims="true"/>
					<containsregex pattern="[a-zA-Z0-9]{18}"/>
				</tokenfilter>
			</filterchain>
		</loadfile>

		<echo message="DEBUG LOG: dev.asyncRequestId = ${dev.asyncRequestId}" />

		<java jar="C:\HCSC\Sonar_eclipse\sonarlint-eclipse-master\extractTestResult\target\extractTestResult-1.0-SNAPSHOT-jar-with-dependencies.jar"
		      resultproperty="codeCoverageFail" fork="true">
			<arg value="${sf.deploy.username}"/>
			<arg value="${sf.deploy.password}"/>
			<arg value="${sf.deploy.serverurl}"/>
			<arg value="${dev.asyncRequestId}"/>
		</java>
	</target>

	<target name="sf_CopyBuildForUCD" depends="sf_prepare_deployment">
		<echo message="START: Copy to UCD Deployment Folder" />
		<mkdir dir="${destDir}" />
		<copy todir="${destDir}" >
			<fileset dir="../${diffDir}/src" includes="**"/>
		</copy>
	</target>

	<target name="sf_build_independent" depends="sf_prepare_full_deployment">
		<echo message="Adding properties if applicable" />
		<exec executable="/bin/bash" osfamily="unix">
			<arg value="properties_helper.sh" />
			<arg value="${propsEnv}" />
			<arg value="../${diffDir}/src" />
		</exec>
		<echo message="Properties added. Finished." />
		<echo message="START: SFDC Deployment" />
		<echo message="../${diffDir}/src" />
		<sf:deploy  username="${sf.deploy.username}" password="${sf.deploy.password}"
		            serverurl="${sf.deploy.serverurl}" sessionId="${sf.deploy.sessionId}"
		            deployRoot="../${diffDir}/src" maxPoll="${sf.maxPoll}"
		            pollWaitMillis="${sf.pollWaitMillis}" checkOnly="${sf.checkOnly}"
		            runAllTests="${sf.runAllTests}" logType="${sf.logType}"
		/>
	</target>
	<target name="git_tag">
		<echo message="Build date is: ${BUILD_DATE}" />
		<echo message="Build number: ${BUILD_NUMBER}" />
		<echo message="Build tag name will be: ${ENV}_${BUILD_DATE}_${BUILD_NUMBER}" />
		<echo message="Creating tag on current repository" />
		<exec executable="/bin/bash" osfamily="unix">
			<arg value="create_tag.sh" />
			<arg value=".." />
			<arg value="${ENV}_${BUILD_DATE}_${BUILD_NUMBER}" />
			<arg value="${REPO_PASS}" />
		</exec>
	</target>

	<!--<target name="run">
		<java jar="C:\HCSC\Sonar_eclipse\sonarlint-eclipse-master\extractTestResult\target\extractTestResult-1.0-SNAPSHOT-jar-with-dependencies.jar"
		      resultproperty="codeCoverageFail" fork="true">
			<arg value="nagendra@deloitte.com"/>
			<arg value="Developer!11TRAKq9np9O4eC9ty47lCGL27"/>
			<arg value="https://login.salesforce.com"/>
			<arg value=""/>
		</java>

	</target>-->

</project>